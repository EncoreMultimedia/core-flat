// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin

// if $context is true, switch to rem
@function em($px, $context-or-rem: $base-font-size) {
  @if($context-or-rem == true) {
    @return $px / strip_unit($base-font-size) * 1rem;
  } @else {
    @return $px / strip_unit($context-or-rem) * 1em;
  }
}

/// Remove the unit of a length
/// @param {Number} $number - Number to remove unit from
/// @return {Number} - Unitless number
@function strip_unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

/*
//Disabled till needed so sass will compile

$sprites: sprite-map("sprites/*.png", $spacing: 15px);
$sprites_2x: sprite-map("sprites2x/*.png", $spacing: 30px);
$sprites_3x: sprite-map("sprites3x/*.png", $spacing: 45px);

$sprite_url: sprite-url($sprites);
$sprite_2x_url: sprite-url($sprites_2x);
$sprite_3x_url: sprite-url($sprites_3x);

@mixin sprite-background($name) {
  background-image: $sprite_url;
  background-position: sprite-position($sprites, $name);
  background-repeat: no-repeat;
  display: block;
  height: image-height(sprite-file($sprites, $name));
  width: image-width(sprite-file($sprites, $name));
  @media (-webkit-min-device-pixel-ratio: 1.5), (min-resolution: 144dpi), (min-resolution: 1.5dppx) {
    // Workaround for https://gist.github.com/2140082
    @if (sprite-position($sprites, $name) != sprite-position($sprites_2x, $name)) {
      $ypos: round(nth(sprite-position($sprites_2x, $name), 2) / 2);
      background-position: 0 $ypos;
    }
    // Hard coded width of the normal sprite image. There must be a smarter way to do this.
    @include background-size($normal_sprite_width auto);
    background-image: $sprite_2x_url;
  }

  @media (-webkit-min-device-pixel-ratio: 3), (min-resolution: 288dpi), (min-resolution: 3dppx) {
    // Workaround for https://gist.github.com/2140082
    @if (sprite-position($sprites, $name) != sprite-position($sprites_3x, $name)) {
      $ypos: round(nth(sprite-position($sprites_3x, $name), 2) / 3);
      background-position: 0 $ypos;
    }
    // Hard coded width of the normal sprite image. There must be a smarter way to do this.
    @include background-size($normal_sprite_width auto);
    background-image: $sprite_3x_url;
  }
}
*/
